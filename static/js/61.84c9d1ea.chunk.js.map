{"version":3,"file":"static/js/61.84c9d1ea.chunk.js","mappings":"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","sources":["components/tab/index.js","components/searchBar/index.js","../javascript/esm|T:/React Projects/react-deploy/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../javascript/esm|T:/React Projects/react-deploy/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../javascript/esm|T:/React Projects/react-deploy/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../javascript/esm|T:/React Projects/react-deploy/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/SongListItem/listItem.js","pages/playlist/playlist.js","pages/home/home.js"],"sourcesContent":["import \"./tab.css\";\r\nfunction TabBar({setShowPlaylist}) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"tabs\">\r\n        <input\r\n          type=\"radio\"\r\n          id=\"radio-1\"\r\n          name=\"tabs\"\r\n          onClick={() => setShowPlaylist(false)}\r\n        />\r\n        <label className=\"tab\" htmlFor=\"radio-1\">\r\n          All Songs\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"radio-2\"\r\n          name=\"tabs\"\r\n          onClick={() => setShowPlaylist(true)}\r\n        />\r\n        <label className=\"tab\" htmlFor=\"radio-2\">\r\n          Playlists\r\n        </label>\r\n        <span className=\"glider\"></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabBar;\r\n","import \"./searchBar.css\";\r\nfunction SearchBar() {\r\n  return (\r\n    <div className=\"input-container\">\r\n      <input\r\n        type=\"text\"\r\n        // value={query}\r\n        // onChange={handleSearch}\r\n        placeholder=\"Search\"\r\n        className=\"search\"\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import \"./listItem.css\";\r\n\r\nconst RenderSongList = ({\r\n  song,\r\n  albumList,\r\n  state,\r\n  setState,\r\n  selectedPlaylist,\r\n  setPlaylist,\r\n  playlist,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"item\"\r\n      onClick={() => {\r\n        if (state === 3) {\r\n          if (\r\n            playlist[selectedPlaylist].songs.find((item) => item.id === song.id)\r\n          ) {\r\n            alert(\"Song already added\");\r\n          } else {\r\n            playlist[selectedPlaylist].songs.push(song);\r\n            setPlaylist(playlist);\r\n            localStorage.setItem(\"playlist\", JSON.stringify(playlist));\r\n            setState(2);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      <div className=\"cardRight\">\r\n        <img src={song?.thumbnailUrl} className=\"image\" alt=\"Logo\" />\r\n      </div>\r\n      <div className=\"cardLeft\">\r\n        <div className=\"cardTitle\">\r\n          {albumList?.find((album) => album?.id === song?.albumId)?.title}\r\n        </div>\r\n        <div className=\"desc\">{song.title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RenderSongList;\r\n","import React, {useState} from \"react\";\r\nimport SearchBar from \"../../components/searchBar\";\r\nimport RenderSongList from \"../../components/SongListItem/listItem\";\r\nimport \"./styles.css\";\r\n\r\nconst Playlist = ({albumList, songList}) => {\r\n  const [playlist, setPlaylist] = useState(\r\n    JSON.parse(localStorage.getItem(\"playlist\")) || []\r\n  );\r\n  const [selectedPlaylist, setSelectedPlaylist] = useState(null);\r\n  const [state, setState] = useState(1);\r\n\r\n  const RenderPlaylist = ({item, index}) => {\r\n    return (\r\n      <div\r\n        className=\"item\"\r\n        onClick={() => {\r\n          setState(2);\r\n          setSelectedPlaylist(index);\r\n        }}\r\n      >\r\n        <div className=\"cardLeft\">\r\n          <div className=\"cardTitle\">{item?.name}</div>\r\n          <div className=\"desc\">{item?.songs?.length}</div>\r\n          <div className=\"desc-i\">{item?.createdAt}</div>\r\n        </div>\r\n        <div className=\"cardEnd\">x</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state !== 3 && (\r\n        <button\r\n          className=\"float-btn float-bottom\"\r\n          onClick={() => {\r\n            if (state === 1) {\r\n              let newPlaylist = [\r\n                ...playlist,\r\n                {\r\n                  name: \"Playlist\",\r\n                  songs: [],\r\n                  createdAt: new Date().toDateString(),\r\n                },\r\n              ];\r\n              setPlaylist(newPlaylist);\r\n              localStorage.setItem(\"playlist\", JSON.stringify(newPlaylist));\r\n            } else {\r\n              setState(3);\r\n            }\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n      )}\r\n      {state !== 1 && (\r\n        <button\r\n          className=\"float-btn float-top\"\r\n          onClick={() => {\r\n            if (state === 2) {\r\n              setSelectedPlaylist(null);\r\n              setState(1);\r\n            } else {\r\n              setState(2);\r\n            }\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n      )}\r\n      {state === 2 && (\r\n        <button\r\n          className=\"float-btn float-right\"\r\n          onClick={() => {\r\n            let shuffledsongs = playlist[selectedPlaylist].songs.sort(\r\n              (a, b) => 0.5 - Math.random()\r\n            );\r\n            playlist[selectedPlaylist].songs = shuffledsongs;\r\n            setPlaylist([...playlist]);\r\n          }}\r\n        >\r\n          Shuffle\r\n        </button>\r\n      )}\r\n      {state !== 1 && (\r\n        <div className=\"playlistTitle\">\r\n          {`${playlist[selectedPlaylist].name} (${playlist[selectedPlaylist].songs?.length})`}\r\n        </div>\r\n      )}\r\n      {state === 1 &&\r\n        playlist?.map((item, index) => (\r\n          <RenderPlaylist key={item?.createdAt} item={item} index={index} />\r\n        ))}\r\n      {state === 2 &&\r\n        playlist?.[selectedPlaylist]?.songs?.map((item) => (\r\n          <RenderSongList key={item.id} song={item} albumList={albumList} />\r\n        ))}\r\n\r\n      {state === 3 && (\r\n        <>\r\n          <SearchBar />\r\n          {songList?.map((item) => (\r\n            <RenderSongList\r\n              key={item.id}\r\n              song={item}\r\n              albumList={albumList}\r\n              state={state}\r\n              setState={setState}\r\n              selectedPlaylist={selectedPlaylist}\r\n              setPlaylist={setPlaylist}\r\n              playlist={playlist}\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Playlist;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport \"./styles.css\";\r\nimport AppSpinner from \"../../components/spinner\";\r\nimport TabBar from \"../../components/tab\";\r\nimport SearchBar from \"../../components/searchBar\";\r\nimport Playlist from \"../playlist/playlist\";\r\nimport RenderSongList from \"../../components/SongListItem/listItem\";\r\n\r\nconst Home = () => {\r\n  const [songList, setSongList] = useState();\r\n  const [albumList, setAlbumList] = useState();\r\n\r\n  const [showPlaylist, setShowPlaylist] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const songs = JSON.parse(localStorage.getItem(\"songs\"));\r\n    const albums = JSON.parse(localStorage.getItem(\"albums\"));\r\n    if (songs && albums) {\r\n      setSongList(songs);\r\n      setAlbumList(albums);\r\n    } else {\r\n      Promise.all([\r\n        fetch(\"https://jsonplaceholder.typicode.com/photos\").then((value) =>\r\n          value.json()\r\n        ),\r\n        fetch(\" https://jsonplaceholder.typicode.com/albums\").then((value) =>\r\n          value.json()\r\n        ),\r\n      ])\r\n        .then(([songs, albums]) => {\r\n          setSongList(songs);\r\n          setAlbumList(albums);\r\n          localStorage.setItem(\"songs\", JSON.stringify(songs));\r\n          localStorage.setItem(\"albums\", JSON.stringify(albums));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  //Search Function\r\n  // function handleSearch(e) {\r\n  //   setQuery(e.target.value);\r\n  //   setPageNumber(1);\r\n  // }\r\n\r\n  return (\r\n    <div className=\"homebody\">\r\n      <div>Hellxo</div>\r\n      {songList ? (\r\n        <>\r\n          <TabBar setShowPlaylist={setShowPlaylist} />\r\n          <div className=\"ListBody\">\r\n            {showPlaylist ? (\r\n              <Playlist albumList={albumList} songList={songList} />\r\n            ) : (\r\n              <>\r\n                <SearchBar />\r\n                {songList.map((song) => {\r\n                  return (\r\n                    <RenderSongList\r\n                      key={song.id}\r\n                      song={song}\r\n                      albumList={albumList}\r\n                    />\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <AppSpinner />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["setShowPlaylist","className","type","id","name","onClick","htmlFor","placeholder","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","song","albumList","state","setState","selectedPlaylist","setPlaylist","playlist","songs","find","item","alert","push","localStorage","setItem","JSON","stringify","src","thumbnailUrl","alt","album","albumId","title","songList","useState","parse","getItem","setSelectedPlaylist","RenderPlaylist","index","length","createdAt","newPlaylist","Date","toDateString","shuffledsongs","sort","a","b","Math","random","map","setSongList","setAlbumList","showPlaylist","useEffect","albums","Promise","all","fetch","then","value","json","catch","err","console","log"],"sourceRoot":""}